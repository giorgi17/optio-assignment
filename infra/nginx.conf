events {
    worker_connections 1024;
}

http {
    # Upstream configuration for API service
    # Docker Compose will resolve 'api' to all scaled instances
    upstream api_backend {
        # Docker's internal DNS will load balance across all API instances
        server api:3000;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Increase buffer sizes for WebSocket
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # API endpoints
        location /api/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            
            # Forward headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # WebSocket endpoint (Socket.IO)
        location /socket.io/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            
            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Forward headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts (longer for WebSocket)
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "nginx is healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

